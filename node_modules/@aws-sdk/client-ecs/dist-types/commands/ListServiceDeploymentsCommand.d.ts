import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { ECSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ECSClient";
import { ListServiceDeploymentsRequest, ListServiceDeploymentsResponse } from "../models/models_0";
/**
 * @public
 */
export type { __MetadataBearer };
export { $Command };
/**
 * @public
 *
 * The input for {@link ListServiceDeploymentsCommand}.
 */
export interface ListServiceDeploymentsCommandInput extends ListServiceDeploymentsRequest {
}
/**
 * @public
 *
 * The output of {@link ListServiceDeploymentsCommand}.
 */
export interface ListServiceDeploymentsCommandOutput extends ListServiceDeploymentsResponse, __MetadataBearer {
}
declare const ListServiceDeploymentsCommand_base: {
    new (input: ListServiceDeploymentsCommandInput): import("@smithy/smithy-client").CommandImpl<ListServiceDeploymentsCommandInput, ListServiceDeploymentsCommandOutput, ECSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: ListServiceDeploymentsCommandInput): import("@smithy/smithy-client").CommandImpl<ListServiceDeploymentsCommandInput, ListServiceDeploymentsCommandOutput, ECSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>This operation lists all the service deployments that meet the specified filter criteria.</p>
 *          <p>A service deployment happens when you release a softwre update for the service. You
 * 			route traffic from the running service revisions to the new service revison and control
 * 			the number of running tasks. </p>
 *          <p>This API returns the values that you use for the request parameters in <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeServiceRevisions.html">DescribeServiceRevisions</a>.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ECSClient, ListServiceDeploymentsCommand } from "@aws-sdk/client-ecs"; // ES Modules import
 * // const { ECSClient, ListServiceDeploymentsCommand } = require("@aws-sdk/client-ecs"); // CommonJS import
 * const client = new ECSClient(config);
 * const input = { // ListServiceDeploymentsRequest
 *   service: "STRING_VALUE", // required
 *   cluster: "STRING_VALUE",
 *   status: [ // ServiceDeploymentStatusList
 *     "PENDING" || "SUCCESSFUL" || "STOPPED" || "STOP_REQUESTED" || "IN_PROGRESS" || "ROLLBACK_IN_PROGRESS" || "ROLLBACK_SUCCESSFUL" || "ROLLBACK_FAILED",
 *   ],
 *   createdAt: { // CreatedAt
 *     before: new Date("TIMESTAMP"),
 *     after: new Date("TIMESTAMP"),
 *   },
 *   nextToken: "STRING_VALUE",
 *   maxResults: Number("int"),
 * };
 * const command = new ListServiceDeploymentsCommand(input);
 * const response = await client.send(command);
 * // { // ListServiceDeploymentsResponse
 * //   serviceDeployments: [ // ServiceDeploymentsBrief
 * //     { // ServiceDeploymentBrief
 * //       serviceDeploymentArn: "STRING_VALUE",
 * //       serviceArn: "STRING_VALUE",
 * //       clusterArn: "STRING_VALUE",
 * //       startedAt: new Date("TIMESTAMP"),
 * //       createdAt: new Date("TIMESTAMP"),
 * //       finishedAt: new Date("TIMESTAMP"),
 * //       targetServiceRevisionArn: "STRING_VALUE",
 * //       status: "PENDING" || "SUCCESSFUL" || "STOPPED" || "STOP_REQUESTED" || "IN_PROGRESS" || "ROLLBACK_IN_PROGRESS" || "ROLLBACK_SUCCESSFUL" || "ROLLBACK_FAILED",
 * //       statusReason: "STRING_VALUE",
 * //     },
 * //   ],
 * //   nextToken: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param ListServiceDeploymentsCommandInput - {@link ListServiceDeploymentsCommandInput}
 * @returns {@link ListServiceDeploymentsCommandOutput}
 * @see {@link ListServiceDeploymentsCommandInput} for command's `input` shape.
 * @see {@link ListServiceDeploymentsCommandOutput} for command's `response` shape.
 * @see {@link ECSClientResolvedConfig | config} for ECSClient's `config` shape.
 *
 * @throws {@link AccessDeniedException} (client fault)
 *  <p>You don't have authorization to perform the requested action.</p>
 *
 * @throws {@link ClientException} (client fault)
 *  <p>These errors are usually caused by a client action. This client action might be using an action or
 * 			resource on behalf of a user that doesn't have permissions to use the action or resource. Or, it might
 * 			be specifying an identifier that isn't valid.</p>
 *          <p>The following list includes additional causes for the error:</p>
 *          <ul>
 *             <li>
 *                <p>The <code>RunTask</code> could not be processed because you use managed scaling and there is
 * 					a capacity error because the quota of tasks in the <code>PROVISIONING</code> per cluster has
 * 					been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon ECS service
 * 						quotas</a>.</p>
 *             </li>
 *          </ul>
 *
 * @throws {@link InvalidParameterException} (client fault)
 *  <p>The specified parameter isn't valid. Review the available parameters for the API request.</p>
 *
 * @throws {@link ServerException} (server fault)
 *  <p>These errors are usually caused by a server issue.</p>
 *
 * @throws {@link ServiceNotFoundException} (client fault)
 *  <p>The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>. Amazon ECS services are cluster specific and Region specific.</p>
 *
 * @throws {@link UnsupportedFeatureException} (client fault)
 *  <p>The specified task isn't supported in this Region.</p>
 *
 * @throws {@link ECSServiceException}
 * <p>Base exception class for all service exceptions from ECS service.</p>
 *
 * @public
 */
export declare class ListServiceDeploymentsCommand extends ListServiceDeploymentsCommand_base {
    /** @internal type navigation helper, not in runtime. */
    protected static __types: {
        api: {
            input: ListServiceDeploymentsRequest;
            output: ListServiceDeploymentsResponse;
        };
        sdk: {
            input: ListServiceDeploymentsCommandInput;
            output: ListServiceDeploymentsCommandOutput;
        };
    };
}
